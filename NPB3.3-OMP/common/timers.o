; ModuleID = 'timers.f'
target datalayout = "e-p:64:64:64-S128-i1:8:8-i8:8:8-i16:16:16-i32:32:32-i64:64:64-f16:16:16-f32:32:32-f64:64:64-f128:128:128-v64:64:64-v128:128:128-a0:0:64-s0:64:64-f80:128:128-n8:16:32:64"
target triple = "x86_64-unknown-linux-gnu"

module asm "\09.ident\09\22GCC: (GNU) 4.8.2 20140206 (prerelease) LLVM: 3.4\22"

%0 = type { [64 x double], [64 x double] }

@tt_ = common unnamed_addr global %0 zeroinitializer, align 32

; Function Attrs: nounwind uwtable
define double @elapsed_time_() #0 {
entry:
  %mp = alloca i32
  %t = alloca double
  %__result_elapsed_time = alloca double
  %"<retval>" = alloca double
  %"alloca point" = bitcast i32 0 to i32
  %"ssa point" = bitcast i32 0 to i32
  br label %"2"

"2":                                              ; preds = %entry
  br i1 true, label %"3", label %"4"

"3":                                              ; preds = %"2"
  call void bitcast (void (...)* @wtime_ to void (double*)*)(double* %t) #1
  br label %"4"

"4":                                              ; preds = %"3", %"2"
  %0 = load double* %t, align 8
  store double %0, double* %__result_elapsed_time, align 8
  %1 = load double* %__result_elapsed_time, align 8
  %2 = bitcast double* %t to i8*
  call void @llvm.lifetime.end(i64 8, i8* %2)
  %3 = bitcast double* %__result_elapsed_time to i8*
  call void @llvm.lifetime.end(i64 8, i8* %3)
  br label %"5"

"5":                                              ; preds = %"4"
  store double %1, double* %"<retval>", align 1
  br label %return

return:                                           ; preds = %"5"
  %4 = load double* %"<retval>", align 8
  ret double %4
}

declare void @wtime_(...)

; Function Attrs: nounwind
declare void @llvm.lifetime.end(i64, i8* nocapture) #1

; Function Attrs: nounwind uwtable
define void @timer_clear_(i32* noalias %n) unnamed_addr #0 {
entry:
  %n_addr = alloca i32*, align 8
  %"alloca point" = bitcast i32 0 to i32
  store i32* %n, i32** %n_addr, align 1
  %0 = load i32** %n_addr, align 8
  %"ssa point" = bitcast i32 0 to i32
  br label %"2"

"2":                                              ; preds = %entry
  %1 = load i32* %0, align 4
  %2 = sext i32 %1 to i64
  %3 = add i64 %2, -1
  %4 = getelementptr double* getelementptr inbounds (%0* @tt_, i64 0, i32 1, i64 0), i64 %3
  store double 0.000000e+00, double* %4, align 8
  br label %"3"

"3":                                              ; preds = %"2"
  br label %return

return:                                           ; preds = %"3"
  ret void
}

; Function Attrs: nounwind uwtable
define void @timer_start_(i32* noalias %n) unnamed_addr #0 {
entry:
  %n_addr = alloca i32*, align 8
  %"alloca point" = bitcast i32 0 to i32
  store i32* %n, i32** %n_addr, align 1
  %0 = load i32** %n_addr, align 8
  %"ssa point" = bitcast i32 0 to i32
  br label %"2"

"2":                                              ; preds = %entry
  %1 = load i32* %0, align 4
  %2 = sext i32 %1 to i64
  %3 = add i64 %2, -1
  %4 = call double @elapsed_time_() #0
  %5 = getelementptr double* getelementptr inbounds (%0* @tt_, i64 0, i32 0, i64 0), i64 %3
  store double %4, double* %5, align 8
  br label %"3"

"3":                                              ; preds = %"2"
  br label %return

return:                                           ; preds = %"3"
  ret void
}

; Function Attrs: nounwind uwtable
define void @timer_stop_(i32* noalias %n) unnamed_addr #0 {
entry:
  %n_addr = alloca i32*, align 8
  %now = alloca double
  %t = alloca double
  %"alloca point" = bitcast i32 0 to i32
  store i32* %n, i32** %n_addr, align 1
  %0 = load i32** %n_addr, align 8
  %"ssa point" = bitcast i32 0 to i32
  br label %"2"

"2":                                              ; preds = %entry
  %1 = call double @elapsed_time_() #0
  %2 = load i32* %0, align 4
  %3 = sext i32 %2 to i64
  %4 = add i64 %3, -1
  %5 = getelementptr double* getelementptr inbounds (%0* @tt_, i64 0, i32 0, i64 0), i64 %4
  %6 = load double* %5, align 8
  %7 = fsub double %1, %6
  %8 = load i32* %0, align 4
  %9 = sext i32 %8 to i64
  %10 = add i64 %9, -1
  %11 = load i32* %0, align 4
  %12 = sext i32 %11 to i64
  %13 = add i64 %12, -1
  %14 = getelementptr double* getelementptr inbounds (%0* @tt_, i64 0, i32 1, i64 0), i64 %13
  %15 = load double* %14, align 8
  %16 = fadd double %15, %7
  %17 = getelementptr double* getelementptr inbounds (%0* @tt_, i64 0, i32 1, i64 0), i64 %10
  store double %16, double* %17, align 8
  br label %"3"

"3":                                              ; preds = %"2"
  br label %return

return:                                           ; preds = %"3"
  ret void
}

; Function Attrs: nounwind uwtable
define double @timer_read_(i32* noalias %n) unnamed_addr #0 {
entry:
  %n_addr = alloca i32*, align 8
  %__result_timer_read = alloca double
  %"<retval>" = alloca double
  %"alloca point" = bitcast i32 0 to i32
  store i32* %n, i32** %n_addr, align 1
  %0 = load i32** %n_addr, align 8
  %"ssa point" = bitcast i32 0 to i32
  br label %"2"

"2":                                              ; preds = %entry
  %1 = load i32* %0, align 4
  %2 = sext i32 %1 to i64
  %3 = add i64 %2, -1
  %4 = getelementptr double* getelementptr inbounds (%0* @tt_, i64 0, i32 1, i64 0), i64 %3
  %5 = load double* %4, align 8
  store double %5, double* %__result_timer_read, align 8
  %6 = load double* %__result_timer_read, align 8
  %7 = bitcast double* %__result_timer_read to i8*
  call void @llvm.lifetime.end(i64 8, i8* %7)
  br label %"3"

"3":                                              ; preds = %"2"
  store double %6, double* %"<retval>", align 1
  br label %return

return:                                           ; preds = %"3"
  %8 = load double* %"<retval>", align 8
  ret double %8
}

attributes #0 = { nounwind uwtable "no-frame-pointer-elim-non-leaf"="true" }
attributes #1 = { nounwind }
