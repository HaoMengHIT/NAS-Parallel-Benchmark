; ModuleID = 'add.f'
target datalayout = "e-p:64:64:64-S128-i1:8:8-i8:8:8-i16:16:16-i32:32:32-i64:64:64-f16:16:16-f32:32:32-f64:64:64-f128:128:128-v64:64:64-v128:128:128-a0:0:64-s0:64:64-f80:128:128-n8:16:32:64"
target triple = "x86_64-unknown-linux-gnu"

module asm "\09.ident\09\22GCC: (GNU) 4.8.2 20140206 (prerelease) LLVM: 3.4\22"

%0 = type { double, double, double, double, double, double, double, double, double, double, double, double, double, double, double, double, double, double, double, double, double, double, double, double, double, double, [65 x double], double, double, double, double, double, double, double, double, double, double, double, double, double, double, double, double, double, double, double, double, double, double, double, double, double, double, double, double, double, double, double, double, double, double, double, double, double, double, double, double, double, double, double, double, double, double, double, double, double, double, double, double, double, double, double, double, double, double, double, double, double, double, double, double, double, double, double, double }
%1 = type { [1352000 x double], [270400 x double], [270400 x double], [270400 x double], [270400 x double], [270400 x double], [270400 x double], [1352000 x double], [1352000 x double] }
%2 = type { double, [3 x i32], i32 }
%3 = type { [65 x double], [65 x double], [325 x double], [325 x double] }

@constants_ = common unnamed_addr global %0 zeroinitializer, align 32
@fields_ = common unnamed_addr global %1 zeroinitializer, align 32
@global_ = common unnamed_addr global %2 zeroinitializer, align 16
@work_1d_ = common unnamed_addr global %3 zeroinitializer, align 32
@0 = internal constant i32 11
@1 = internal constant i32 11

; Function Attrs: nounwind uwtable
define void @add_() unnamed_addr #0 {
entry:
  %i = alloca i32
  %j = alloca i32
  %k = alloca i32
  %m = alloca i32
  %D.2124 = alloca i32
  %D.2138 = alloca i32
  %D.2127 = alloca i32
  %D.2137 = alloca i32
  %D.2130 = alloca i32
  %D.2136 = alloca i32
  %D.2135 = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  %"ssa point" = bitcast i32 0 to i32
  br label %"2"

"2":                                              ; preds = %entry
  %0 = load i32* getelementptr inbounds (%2* @global_, i64 0, i32 2), align 4, !range !0
  %1 = trunc i32 %0 to i1
  %2 = icmp ne i1 %1, false
  br i1 %2, label %"3", label %"4"

"3":                                              ; preds = %"2"
  call void bitcast (void (...)* @timer_start_ to void (i32*)*)(i32* @0) #1
  br label %"4"

"4":                                              ; preds = %"3", %"2"
  %3 = load i32* getelementptr inbounds (%2* @global_, i64 0, i32 1, i64 2), align 4
  %4 = add i32 %3, -2
  %5 = icmp sle i32 1, %4
  br i1 %5, label %"5", label %"16"

"5":                                              ; preds = %"15", %"4"
  %6 = phi i32 [ %65, %"15" ], [ 1, %"4" ]
  %7 = load i32* getelementptr inbounds (%2* @global_, i64 0, i32 1, i64 1), align 4
  %8 = add i32 %7, -2
  %9 = icmp sle i32 1, %8
  br i1 %9, label %"6", label %"14"

"6":                                              ; preds = %"13", %"5"
  %10 = phi i32 [ %62, %"13" ], [ 1, %"5" ]
  %11 = load i32* getelementptr inbounds (%2* @global_, i64 0, i32 1, i64 0), align 4
  %12 = add i32 %11, -2
  %13 = icmp sle i32 1, %12
  br i1 %13, label %"7", label %"12"

"7":                                              ; preds = %"11", %"6"
  %14 = phi i32 [ %59, %"11" ], [ 1, %"6" ]
  br i1 true, label %"8", label %"10"

"8":                                              ; preds = %"9", %"7"
  %15 = phi i32 [ %56, %"9" ], [ 1, %"7" ]
  %16 = sext i32 %6 to i64
  %17 = mul i64 %16, 21125
  %18 = sext i32 %10 to i64
  %19 = mul i64 %18, 325
  %20 = add i64 %17, %19
  %21 = sext i32 %14 to i64
  %22 = mul i64 %21, 5
  %23 = add i64 %20, %22
  %24 = sext i32 %15 to i64
  %25 = add i64 %23, %24
  %26 = add i64 %25, -1
  %27 = sext i32 %6 to i64
  %28 = mul i64 %27, 21125
  %29 = sext i32 %10 to i64
  %30 = mul i64 %29, 325
  %31 = add i64 %28, %30
  %32 = sext i32 %14 to i64
  %33 = mul i64 %32, 5
  %34 = add i64 %31, %33
  %35 = sext i32 %15 to i64
  %36 = add i64 %34, %35
  %37 = add i64 %36, -1
  %38 = getelementptr double* getelementptr inbounds (%1* @fields_, i64 0, i32 0, i64 0), i64 %37
  %39 = load double* %38, align 8
  %40 = sext i32 %6 to i64
  %41 = mul i64 %40, 21125
  %42 = sext i32 %10 to i64
  %43 = mul i64 %42, 325
  %44 = add i64 %41, %43
  %45 = sext i32 %14 to i64
  %46 = mul i64 %45, 5
  %47 = add i64 %44, %46
  %48 = sext i32 %15 to i64
  %49 = add i64 %47, %48
  %50 = add i64 %49, -1
  %51 = getelementptr double* getelementptr inbounds (%1* @fields_, i64 0, i32 7, i64 0), i64 %50
  %52 = load double* %51, align 8
  %53 = fadd double %39, %52
  %54 = getelementptr double* getelementptr inbounds (%1* @fields_, i64 0, i32 0, i64 0), i64 %26
  store double %53, double* %54, align 8
  %55 = icmp eq i32 %15, 5
  %56 = add i32 %15, 1
  %57 = icmp ne i1 %55, false
  br i1 %57, label %"10", label %"9"

"9":                                              ; preds = %"8"
  br label %"8"

"10":                                             ; preds = %"8", %"7"
  %58 = icmp eq i32 %14, %12
  %59 = add i32 %14, 1
  %60 = icmp ne i1 %58, false
  br i1 %60, label %"12", label %"11"

"11":                                             ; preds = %"10"
  br label %"7"

"12":                                             ; preds = %"10", %"6"
  %61 = icmp eq i32 %10, %8
  %62 = add i32 %10, 1
  %63 = icmp ne i1 %61, false
  br i1 %63, label %"14", label %"13"

"13":                                             ; preds = %"12"
  br label %"6"

"14":                                             ; preds = %"12", %"5"
  %64 = icmp eq i32 %6, %4
  %65 = add i32 %6, 1
  %66 = icmp ne i1 %64, false
  br i1 %66, label %"16", label %"15"

"15":                                             ; preds = %"14"
  br label %"5"

"16":                                             ; preds = %"14", %"4"
  %67 = load i32* getelementptr inbounds (%2* @global_, i64 0, i32 2), align 4, !range !0
  %68 = trunc i32 %67 to i1
  %69 = icmp ne i1 %68, false
  br i1 %69, label %"17", label %"18"

"17":                                             ; preds = %"16"
  call void bitcast (void (...)* @timer_stop_ to void (i32*)*)(i32* @1) #1
  br label %"18"

"18":                                             ; preds = %"17", %"16"
  br label %"19"

"19":                                             ; preds = %"18"
  br label %return

return:                                           ; preds = %"19"
  ret void
}

declare void @timer_start_(...)

declare void @timer_stop_(...)

attributes #0 = { nounwind uwtable "no-frame-pointer-elim-non-leaf"="true" }
attributes #1 = { nounwind }

!0 = metadata !{i32 0, i32 2}
