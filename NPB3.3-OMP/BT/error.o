; ModuleID = 'error.f'
target datalayout = "e-p:64:64:64-S128-i1:8:8-i8:8:8-i16:16:16-i32:32:32-i64:64:64-f16:16:16-f32:32:32-f64:64:64-f128:128:128-v64:64:64-v128:128:128-a0:0:64-s0:64:64-f80:128:128-n8:16:32:64"
target triple = "x86_64-unknown-linux-gnu"

module asm "\09.ident\09\22GCC: (GNU) 4.8.2 20140206 (prerelease) LLVM: 3.4\22"

%0 = type { double, double, double, double, double, double, double, double, double, double, double, double, double, double, double, double, double, double, double, double, double, double, double, double, double, double, [65 x double], double, double, double, double, double, double, double, double, double, double, double, double, double, double, double, double, double, double, double, double, double, double, double, double, double, double, double, double, double, double, double, double, double, double, double, double, double, double, double, double, double, double, double, double, double, double, double, double, double, double, double, double, double, double, double, double, double, double, double, double, double, double, double, double, double, double, double, double }
%1 = type { [1352000 x double], [270400 x double], [270400 x double], [270400 x double], [270400 x double], [270400 x double], [270400 x double], [1352000 x double], [1352000 x double] }
%2 = type { double, [3 x i32], i32 }
%3 = type { [65 x double], [65 x double], [325 x double], [325 x double] }

@constants_ = common unnamed_addr global %0 zeroinitializer, align 32
@fields_ = common unnamed_addr global %1 zeroinitializer, align 32
@global_ = common unnamed_addr global %2 zeroinitializer, align 16
@work_1d_ = common unnamed_addr global %3 zeroinitializer, align 32

; Function Attrs: nounwind uwtable
define void @error_norm_([5 x double]* noalias %rms) unnamed_addr #0 {
entry:
  %rms_addr = alloca [5 x double]*, align 8
  %add = alloca double
  %d = alloca i32
  %eta = alloca double
  %i = alloca i32
  %j = alloca i32
  %k = alloca i32
  %m = alloca i32
  %rms_local = alloca [5 x double]
  %u_exact = alloca [5 x double]
  %xi = alloca double
  %zeta = alloca double
  %D.2134 = alloca i32
  %D.2137 = alloca i32
  %D.2138 = alloca i32
  %D.2153 = alloca i32
  %D.2141 = alloca i32
  %D.2152 = alloca i32
  %D.2144 = alloca i32
  %D.2151 = alloca i32
  %D.2150 = alloca i32
  %D.2156 = alloca i32
  %D.2162 = alloca i32
  %D.2161 = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store [5 x double]* %rms, [5 x double]** %rms_addr, align 1
  %0 = load [5 x double]** %rms_addr, align 8
  %"ssa point" = bitcast i32 0 to i32
  br label %"2"

"2":                                              ; preds = %entry
  br i1 true, label %"3", label %"5"

"3":                                              ; preds = %"4", %"2"
  %1 = phi i32 [ %7, %"4" ], [ 1, %"2" ]
  %2 = sext i32 %1 to i64
  %3 = add i64 %2, -1
  %4 = bitcast [5 x double]* %0 to double*
  %5 = getelementptr double* %4, i64 %3
  store double 0.000000e+00, double* %5, align 8
  %6 = icmp eq i32 %1, 5
  %7 = add i32 %1, 1
  %8 = icmp ne i1 %6, false
  br i1 %8, label %"5", label %"4"

"4":                                              ; preds = %"3"
  br label %"3"

"5":                                              ; preds = %"3", %"2"
  br i1 true, label %"6", label %"8"

"6":                                              ; preds = %"7", %"5"
  %9 = phi i32 [ %15, %"7" ], [ 1, %"5" ]
  %10 = sext i32 %9 to i64
  %11 = add i64 %10, -1
  %12 = bitcast [5 x double]* %rms_local to double*
  %13 = getelementptr double* %12, i64 %11
  store double 0.000000e+00, double* %13, align 8
  %14 = icmp eq i32 %9, 5
  %15 = add i32 %9, 1
  %16 = icmp ne i1 %14, false
  br i1 %16, label %"8", label %"7"

"7":                                              ; preds = %"6"
  br label %"6"

"8":                                              ; preds = %"6", %"5"
  %17 = load i32* getelementptr inbounds (%2* @global_, i64 0, i32 1, i64 2), align 4
  %18 = add i32 %17, -1
  %19 = icmp sle i32 0, %18
  br i1 %19, label %"9", label %"20"

"9":                                              ; preds = %"19", %"8"
  %20 = phi i32 [ %79, %"19" ], [ 0, %"8" ]
  %21 = sitofp i32 %20 to double
  %22 = load double* getelementptr inbounds (%0* @constants_, i64 0, i32 62), align 16
  %23 = fmul double %21, %22
  store double %23, double* %zeta, align 8
  %24 = load i32* getelementptr inbounds (%2* @global_, i64 0, i32 1, i64 1), align 4
  %25 = add i32 %24, -1
  %26 = icmp sle i32 0, %25
  br i1 %26, label %"10", label %"18"

"10":                                             ; preds = %"17", %"9"
  %27 = phi i32 [ %76, %"17" ], [ 0, %"9" ]
  %28 = sitofp i32 %27 to double
  %29 = load double* getelementptr inbounds (%0* @constants_, i64 0, i32 61), align 8
  %30 = fmul double %28, %29
  store double %30, double* %eta, align 8
  %31 = load i32* getelementptr inbounds (%2* @global_, i64 0, i32 1, i64 0), align 4
  %32 = add i32 %31, -1
  %33 = icmp sle i32 0, %32
  br i1 %33, label %"11", label %"16"

"11":                                             ; preds = %"15", %"10"
  %34 = phi i32 [ %73, %"15" ], [ 0, %"10" ]
  %35 = sitofp i32 %34 to double
  %36 = load double* getelementptr inbounds (%0* @constants_, i64 0, i32 60), align 16
  %37 = fmul double %35, %36
  store double %37, double* %xi, align 8
  call void bitcast (void (...)* @exact_solution_ to void (double*, double*, double*, [5 x double]*)*)(double* %xi, double* %eta, double* %zeta, [5 x double]* %u_exact) #2
  br i1 true, label %"12", label %"14"

"12":                                             ; preds = %"13", %"11"
  %38 = phi i32 [ %70, %"13" ], [ 1, %"11" ]
  %39 = sext i32 %20 to i64
  %40 = mul i64 %39, 21125
  %41 = sext i32 %27 to i64
  %42 = mul i64 %41, 325
  %43 = add i64 %40, %42
  %44 = sext i32 %34 to i64
  %45 = mul i64 %44, 5
  %46 = add i64 %43, %45
  %47 = sext i32 %38 to i64
  %48 = add i64 %46, %47
  %49 = add i64 %48, -1
  %50 = getelementptr double* getelementptr inbounds (%1* @fields_, i64 0, i32 0, i64 0), i64 %49
  %51 = load double* %50, align 8
  %52 = sext i32 %38 to i64
  %53 = add i64 %52, -1
  %54 = bitcast [5 x double]* %u_exact to double*
  %55 = getelementptr double* %54, i64 %53
  %56 = load double* %55, align 8
  %57 = fsub double %51, %56
  %58 = sext i32 %38 to i64
  %59 = add i64 %58, -1
  %60 = sext i32 %38 to i64
  %61 = add i64 %60, -1
  %62 = bitcast [5 x double]* %rms_local to double*
  %63 = getelementptr double* %62, i64 %61
  %64 = load double* %63, align 8
  %65 = fmul double %57, %57
  %66 = fadd double %64, %65
  %67 = bitcast [5 x double]* %rms_local to double*
  %68 = getelementptr double* %67, i64 %59
  store double %66, double* %68, align 8
  %69 = icmp eq i32 %38, 5
  %70 = add i32 %38, 1
  %71 = icmp ne i1 %69, false
  br i1 %71, label %"14", label %"13"

"13":                                             ; preds = %"12"
  br label %"12"

"14":                                             ; preds = %"12", %"11"
  %72 = icmp eq i32 %34, %32
  %73 = add i32 %34, 1
  %74 = icmp ne i1 %72, false
  br i1 %74, label %"16", label %"15"

"15":                                             ; preds = %"14"
  br label %"11"

"16":                                             ; preds = %"14", %"10"
  %75 = icmp eq i32 %27, %25
  %76 = add i32 %27, 1
  %77 = icmp ne i1 %75, false
  br i1 %77, label %"18", label %"17"

"17":                                             ; preds = %"16"
  br label %"10"

"18":                                             ; preds = %"16", %"9"
  %78 = icmp eq i32 %20, %18
  %79 = add i32 %20, 1
  %80 = icmp ne i1 %78, false
  br i1 %80, label %"20", label %"19"

"19":                                             ; preds = %"18"
  br label %"9"

"20":                                             ; preds = %"18", %"8"
  br i1 true, label %"21", label %"23"

"21":                                             ; preds = %"22", %"20"
  %81 = phi i32 [ %98, %"22" ], [ 1, %"20" ]
  %82 = sext i32 %81 to i64
  %83 = add i64 %82, -1
  %84 = sext i32 %81 to i64
  %85 = add i64 %84, -1
  %86 = bitcast [5 x double]* %0 to double*
  %87 = getelementptr double* %86, i64 %85
  %88 = load double* %87, align 8
  %89 = sext i32 %81 to i64
  %90 = add i64 %89, -1
  %91 = bitcast [5 x double]* %rms_local to double*
  %92 = getelementptr double* %91, i64 %90
  %93 = load double* %92, align 8
  %94 = fadd double %88, %93
  %95 = bitcast [5 x double]* %0 to double*
  %96 = getelementptr double* %95, i64 %83
  store double %94, double* %96, align 8
  %97 = icmp eq i32 %81, 5
  %98 = add i32 %81, 1
  %99 = icmp ne i1 %97, false
  br i1 %99, label %"23", label %"22"

"22":                                             ; preds = %"21"
  br label %"21"

"23":                                             ; preds = %"21", %"20"
  br i1 true, label %"24", label %"29"

"24":                                             ; preds = %"28", %"23"
  %100 = phi i32 [ %132, %"28" ], [ 1, %"23" ]
  br i1 true, label %"25", label %"27"

"25":                                             ; preds = %"26", %"24"
  %101 = phi i32 [ %119, %"26" ], [ 1, %"24" ]
  %102 = sext i32 %100 to i64
  %103 = add i64 %102, -1
  %104 = sext i32 %100 to i64
  %105 = add i64 %104, -1
  %106 = bitcast [5 x double]* %0 to double*
  %107 = getelementptr double* %106, i64 %105
  %108 = load double* %107, align 8
  %109 = sext i32 %101 to i64
  %110 = add i64 %109, -1
  %111 = getelementptr i32* getelementptr inbounds (%2* @global_, i64 0, i32 1, i64 0), i64 %110
  %112 = load i32* %111, align 4
  %113 = add i32 %112, -2
  %114 = sitofp i32 %113 to double
  %115 = fdiv double %108, %114
  %116 = bitcast [5 x double]* %0 to double*
  %117 = getelementptr double* %116, i64 %103
  store double %115, double* %117, align 8
  %118 = icmp eq i32 %101, 3
  %119 = add i32 %101, 1
  %120 = icmp ne i1 %118, false
  br i1 %120, label %"27", label %"26"

"26":                                             ; preds = %"25"
  br label %"25"

"27":                                             ; preds = %"25", %"24"
  %121 = sext i32 %100 to i64
  %122 = add i64 %121, -1
  %123 = sext i32 %100 to i64
  %124 = add i64 %123, -1
  %125 = bitcast [5 x double]* %0 to double*
  %126 = getelementptr double* %125, i64 %124
  %127 = load double* %126, align 8
  %128 = call double @sqrt(double %127) #1
  %129 = bitcast [5 x double]* %0 to double*
  %130 = getelementptr double* %129, i64 %122
  store double %128, double* %130, align 8
  %131 = icmp eq i32 %100, 5
  %132 = add i32 %100, 1
  %133 = icmp ne i1 %131, false
  br i1 %133, label %"29", label %"28"

"28":                                             ; preds = %"27"
  br label %"24"

"29":                                             ; preds = %"27", %"23"
  br label %"30"

"30":                                             ; preds = %"29"
  %134 = bitcast double* %eta to i8*
  call void @llvm.lifetime.end(i64 8, i8* %134)
  %135 = bitcast [5 x double]* %rms_local to i8*
  call void @llvm.lifetime.end(i64 40, i8* %135)
  %136 = bitcast [5 x double]* %u_exact to i8*
  call void @llvm.lifetime.end(i64 40, i8* %136)
  %137 = bitcast double* %xi to i8*
  call void @llvm.lifetime.end(i64 8, i8* %137)
  %138 = bitcast double* %zeta to i8*
  call void @llvm.lifetime.end(i64 8, i8* %138)
  br label %"31"

"31":                                             ; preds = %"30"
  br label %return

return:                                           ; preds = %"31"
  ret void
}

declare void @exact_solution_(...)

; Function Attrs: nounwind readnone
declare double @sqrt(double) #1

; Function Attrs: nounwind
declare void @llvm.lifetime.end(i64, i8* nocapture) #2

; Function Attrs: nounwind uwtable
define void @rhs_norm_([5 x double]* noalias %rms) unnamed_addr #0 {
entry:
  %rms_addr = alloca [5 x double]*, align 8
  %add = alloca double
  %d = alloca i32
  %i = alloca i32
  %j = alloca i32
  %k = alloca i32
  %m = alloca i32
  %rms_local = alloca [5 x double]
  %D.2448 = alloca i32
  %D.2451 = alloca i32
  %D.2452 = alloca i32
  %D.2466 = alloca i32
  %D.2455 = alloca i32
  %D.2465 = alloca i32
  %D.2458 = alloca i32
  %D.2464 = alloca i32
  %D.2463 = alloca i32
  %D.2469 = alloca i32
  %D.2475 = alloca i32
  %D.2474 = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store [5 x double]* %rms, [5 x double]** %rms_addr, align 1
  %0 = load [5 x double]** %rms_addr, align 8
  %"ssa point" = bitcast i32 0 to i32
  br label %"2"

"2":                                              ; preds = %entry
  br i1 true, label %"3", label %"5"

"3":                                              ; preds = %"4", %"2"
  %1 = phi i32 [ %7, %"4" ], [ 1, %"2" ]
  %2 = sext i32 %1 to i64
  %3 = add i64 %2, -1
  %4 = bitcast [5 x double]* %0 to double*
  %5 = getelementptr double* %4, i64 %3
  store double 0.000000e+00, double* %5, align 8
  %6 = icmp eq i32 %1, 5
  %7 = add i32 %1, 1
  %8 = icmp ne i1 %6, false
  br i1 %8, label %"5", label %"4"

"4":                                              ; preds = %"3"
  br label %"3"

"5":                                              ; preds = %"3", %"2"
  br i1 true, label %"6", label %"8"

"6":                                              ; preds = %"7", %"5"
  %9 = phi i32 [ %15, %"7" ], [ 1, %"5" ]
  %10 = sext i32 %9 to i64
  %11 = add i64 %10, -1
  %12 = bitcast [5 x double]* %rms_local to double*
  %13 = getelementptr double* %12, i64 %11
  store double 0.000000e+00, double* %13, align 8
  %14 = icmp eq i32 %9, 5
  %15 = add i32 %9, 1
  %16 = icmp ne i1 %14, false
  br i1 %16, label %"8", label %"7"

"7":                                              ; preds = %"6"
  br label %"6"

"8":                                              ; preds = %"6", %"5"
  %17 = load i32* getelementptr inbounds (%2* @global_, i64 0, i32 1, i64 2), align 4
  %18 = add i32 %17, -2
  %19 = icmp sle i32 1, %18
  br i1 %19, label %"9", label %"20"

"9":                                              ; preds = %"19", %"8"
  %20 = phi i32 [ %64, %"19" ], [ 1, %"8" ]
  %21 = load i32* getelementptr inbounds (%2* @global_, i64 0, i32 1, i64 1), align 4
  %22 = add i32 %21, -2
  %23 = icmp sle i32 1, %22
  br i1 %23, label %"10", label %"18"

"10":                                             ; preds = %"17", %"9"
  %24 = phi i32 [ %61, %"17" ], [ 1, %"9" ]
  %25 = load i32* getelementptr inbounds (%2* @global_, i64 0, i32 1, i64 0), align 4
  %26 = add i32 %25, -2
  %27 = icmp sle i32 1, %26
  br i1 %27, label %"11", label %"16"

"11":                                             ; preds = %"15", %"10"
  %28 = phi i32 [ %58, %"15" ], [ 1, %"10" ]
  br i1 true, label %"12", label %"14"

"12":                                             ; preds = %"13", %"11"
  %29 = phi i32 [ %55, %"13" ], [ 1, %"11" ]
  %30 = sext i32 %20 to i64
  %31 = mul i64 %30, 21125
  %32 = sext i32 %24 to i64
  %33 = mul i64 %32, 325
  %34 = add i64 %31, %33
  %35 = sext i32 %28 to i64
  %36 = mul i64 %35, 5
  %37 = add i64 %34, %36
  %38 = sext i32 %29 to i64
  %39 = add i64 %37, %38
  %40 = add i64 %39, -1
  %41 = getelementptr double* getelementptr inbounds (%1* @fields_, i64 0, i32 7, i64 0), i64 %40
  %42 = load double* %41, align 8
  %43 = sext i32 %29 to i64
  %44 = add i64 %43, -1
  %45 = sext i32 %29 to i64
  %46 = add i64 %45, -1
  %47 = bitcast [5 x double]* %rms_local to double*
  %48 = getelementptr double* %47, i64 %46
  %49 = load double* %48, align 8
  %50 = fmul double %42, %42
  %51 = fadd double %49, %50
  %52 = bitcast [5 x double]* %rms_local to double*
  %53 = getelementptr double* %52, i64 %44
  store double %51, double* %53, align 8
  %54 = icmp eq i32 %29, 5
  %55 = add i32 %29, 1
  %56 = icmp ne i1 %54, false
  br i1 %56, label %"14", label %"13"

"13":                                             ; preds = %"12"
  br label %"12"

"14":                                             ; preds = %"12", %"11"
  %57 = icmp eq i32 %28, %26
  %58 = add i32 %28, 1
  %59 = icmp ne i1 %57, false
  br i1 %59, label %"16", label %"15"

"15":                                             ; preds = %"14"
  br label %"11"

"16":                                             ; preds = %"14", %"10"
  %60 = icmp eq i32 %24, %22
  %61 = add i32 %24, 1
  %62 = icmp ne i1 %60, false
  br i1 %62, label %"18", label %"17"

"17":                                             ; preds = %"16"
  br label %"10"

"18":                                             ; preds = %"16", %"9"
  %63 = icmp eq i32 %20, %18
  %64 = add i32 %20, 1
  %65 = icmp ne i1 %63, false
  br i1 %65, label %"20", label %"19"

"19":                                             ; preds = %"18"
  br label %"9"

"20":                                             ; preds = %"18", %"8"
  br i1 true, label %"21", label %"23"

"21":                                             ; preds = %"22", %"20"
  %66 = phi i32 [ %83, %"22" ], [ 1, %"20" ]
  %67 = sext i32 %66 to i64
  %68 = add i64 %67, -1
  %69 = sext i32 %66 to i64
  %70 = add i64 %69, -1
  %71 = bitcast [5 x double]* %0 to double*
  %72 = getelementptr double* %71, i64 %70
  %73 = load double* %72, align 8
  %74 = sext i32 %66 to i64
  %75 = add i64 %74, -1
  %76 = bitcast [5 x double]* %rms_local to double*
  %77 = getelementptr double* %76, i64 %75
  %78 = load double* %77, align 8
  %79 = fadd double %73, %78
  %80 = bitcast [5 x double]* %0 to double*
  %81 = getelementptr double* %80, i64 %68
  store double %79, double* %81, align 8
  %82 = icmp eq i32 %66, 5
  %83 = add i32 %66, 1
  %84 = icmp ne i1 %82, false
  br i1 %84, label %"23", label %"22"

"22":                                             ; preds = %"21"
  br label %"21"

"23":                                             ; preds = %"21", %"20"
  br i1 true, label %"24", label %"29"

"24":                                             ; preds = %"28", %"23"
  %85 = phi i32 [ %117, %"28" ], [ 1, %"23" ]
  br i1 true, label %"25", label %"27"

"25":                                             ; preds = %"26", %"24"
  %86 = phi i32 [ %104, %"26" ], [ 1, %"24" ]
  %87 = sext i32 %85 to i64
  %88 = add i64 %87, -1
  %89 = sext i32 %85 to i64
  %90 = add i64 %89, -1
  %91 = bitcast [5 x double]* %0 to double*
  %92 = getelementptr double* %91, i64 %90
  %93 = load double* %92, align 8
  %94 = sext i32 %86 to i64
  %95 = add i64 %94, -1
  %96 = getelementptr i32* getelementptr inbounds (%2* @global_, i64 0, i32 1, i64 0), i64 %95
  %97 = load i32* %96, align 4
  %98 = add i32 %97, -2
  %99 = sitofp i32 %98 to double
  %100 = fdiv double %93, %99
  %101 = bitcast [5 x double]* %0 to double*
  %102 = getelementptr double* %101, i64 %88
  store double %100, double* %102, align 8
  %103 = icmp eq i32 %86, 3
  %104 = add i32 %86, 1
  %105 = icmp ne i1 %103, false
  br i1 %105, label %"27", label %"26"

"26":                                             ; preds = %"25"
  br label %"25"

"27":                                             ; preds = %"25", %"24"
  %106 = sext i32 %85 to i64
  %107 = add i64 %106, -1
  %108 = sext i32 %85 to i64
  %109 = add i64 %108, -1
  %110 = bitcast [5 x double]* %0 to double*
  %111 = getelementptr double* %110, i64 %109
  %112 = load double* %111, align 8
  %113 = call double @sqrt(double %112) #1
  %114 = bitcast [5 x double]* %0 to double*
  %115 = getelementptr double* %114, i64 %107
  store double %113, double* %115, align 8
  %116 = icmp eq i32 %85, 5
  %117 = add i32 %85, 1
  %118 = icmp ne i1 %116, false
  br i1 %118, label %"29", label %"28"

"28":                                             ; preds = %"27"
  br label %"24"

"29":                                             ; preds = %"27", %"23"
  br label %"30"

"30":                                             ; preds = %"29"
  %119 = bitcast [5 x double]* %rms_local to i8*
  call void @llvm.lifetime.end(i64 40, i8* %119)
  br label %"31"

"31":                                             ; preds = %"30"
  br label %return

return:                                           ; preds = %"31"
  ret void
}

attributes #0 = { nounwind uwtable "no-frame-pointer-elim-non-leaf"="true" }
attributes #1 = { nounwind readnone }
attributes #2 = { nounwind }
